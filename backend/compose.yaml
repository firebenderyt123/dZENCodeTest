services:
  server:
    env_file:
      - .env.production
    build:
      context: .
    ports:
      - 8000:8000
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  db:
    env_file:
      - .env.production
    image: postgres
    restart: always
    expose:
      - 5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    env_file:
      - '.env.production'
    image: redis
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/root/redis
      - redisconfig:/usr/local/etc/redis

  rabbitmq:
    env_file:
      - '.env.production'
    image: rabbitmq:3.13-management
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq

volumes:
  pgdata:
  redisdata:
  redisconfig:
  rabbitmqdata:
